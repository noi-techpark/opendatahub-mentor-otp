# SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>
#
# SPDX-License-Identifier: CC0-1.0

#
# Require a .env file contains all environment vars
# look contents of file _dot.env.example
#
services:
  journey:
    container_name: journey
    ports:
      - "8081:80"
    image: openmove_journey:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/journey/Dockerfile
      args:
        API_HOST: $API_HOST
        API_PATH: $API_PATH
        API_PORT: $API_PORT
        CARSHARING_BASEURL: $CARSHARING_BASEURL
        CHARGER_BASEURL: $CHARGER_BASEURL
        DRT_BASEURL: $DRT_BASEURL
        GEOCODER_BASEURL: $GEOCODER_BASEURL
        PARKING_BASEURL: $PARKING_BASEURL
        TRAFFIC_BASEURL: $TRAFFIC_BASEURL
        ## debug of remote instance
        #API_HOST: https://otp.opendatahub.testingmachine.eu
        #API_PORT: 443
        #API_PATH: /otp/routers/openmove
        #GEOCODER_BASEURL: https://geocoder.otp.opendatahub.testingmachine.eu/v1
        #PARKING_BASEURL: https://parking.otp.opendatahub.testingmachine.eu
        #DRT_BASEURL:  https://drt.otp.opendatahub.testingmachine.eu
        #CHARGER_BASEURL: https://charger.otp.opendatahub.testingmachine.eu
        #CARSHARING_BASEURL: https://carsharing.otp.opendatahub.testingmachine.eu
        #TRAFFIC_BASEURL: https://traffic.otp.opendatahub.testingmachine.eu
        ##
        #GOOGLE_ANALYTICS_ID: $GOOGLE_ANALYTICS_ID
    depends_on:
     - geocoder
     - otp
     - parking
     - charger
     - carsharing-cron
     - traffic
     - drt

  charger:
    container_name: charger
    ports:
      - "8093:8093"
    image: openmove_charger:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/charger/Dockerfile

  drt:
      container_name: drt
      ports:
        - "8095:8095"
      image: openmove_drt:latest
      build:
        context: ./
        dockerfile: infrastructure/docker/drt/Dockerfile

  gbfs:
      container_name: gbfs
      ports:
        - "8089:8089"
      image: openmove_gbfs:latest
      build:
        context: ./
        dockerfile: infrastructure/docker/gbfs/Dockerfile

  geocoder:
    container_name: geocoder
    ports:
      - "8088:8088"
    image: openmove_geocoder:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/geocoder/Dockerfile
    #TODO ONLY FOR DEBUG
    #volumes:
    #  - ./config.yml:/home/config.yml
    #  - ./index.js:/home/index.js
    environment:
      API_HOST: otp
      API_PATH: /otp/routers/openmove
      API_PORT: 8080
      HERE_APPID: ''
      HERE_APPCODE: ''
      HERE_APIKEY: ''

  parking:
    container_name: parking
    ports:
      - "8092:8092"
    image: openmove_parking:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/parking/Dockerfile

  traffic:
    container_name: traffic
    ports:
      - "8094:8094"
    image: openmove_traffic:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/traffic/Dockerfile

  otp:
    container_name: otp
    ports:
      - "8080:8080"
    image: openmove_otp:latest
    build:
      context: ./
      dockerfile: infrastructure/docker/otp/Dockerfile
    environment:
      - JAVA_MX=4G
    depends_on:
      #TODO - drt
      - amarillo
      - gbfs
      - parking
      - charger
      - carsharing-cron
  
  amarillo:
    container_name: amarillo
    build:
      context: ./
      dockerfile: infrastructure/docker/amarillo/Dockerfile
    environment:
      - AMARILLO_BASEURL=${AMARILLO_BASEURL:?missing/empty}
      - ADMIN_TOKEN=${ADMIN_TOKEN:?missing/empty}
    ports:
      - 9095:80
    volumes:
      - /opt/odh-mentor-otp/amarillo/:/app/data/
      # Assumption: latestGTFS.zip is in /opt/otp-mentor-otp (?)
      - /opt/odh-mentor-otp/:/data/
      
    depends_on:
      - graphhopper

  graphhopper:
    container_name: graphhopper 
    image: israelhikingmap/graphhopper:8.0
    command: --host 0.0.0.0 --url https://download.geofabrik.de/europe/italy/nord-est-latest.osm.pbf
    environment:
      - JAVA_OPTS=-Xmx4g
    volumes:
      - /opt/odh-mentor-otp/:/data/
  
  carsharing-cron:
    container_name: carsharing-cron
    build:
      context: ./
      dockerfile: infrastructure/docker/carsharing/Dockerfile
    restart: unless-stopped
    volumes:
       - carsharing-gbfs:/app/out

  carsharing-ngnix:
    container_name: carsharing-ngnix
    ports:
      - "8091:80"
    image: nginx:1.25.4-alpine
    volumes:
       - carsharing-gbfs:/usr/share/nginx/html

volumes:
  carsharing-gbfs: